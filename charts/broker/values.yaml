# details about where to get the image and secret to use for it
image:
  registry: registry.choria.io
  repository: choria/choria
  tag: latest
  pullPolicy: Always
  pullSecret: ""

# run the containers with a specific security context
securityContext:
  enabled: true
  fsGroup: 2048
  runAsUser: 2048

# additional annotations to apply to pods
podAnnotations: {}

# adds custom affinity rules to the pods
podAffinity: {}

# additional labels to apply to pods
podLabels: {}

# configures exposing of prometheus data on /metrics
prometheus:
  # enables exporting, sets annotations for prometheus discovery
  enabled: true
  # port to listen on for metrics
  port: 8080

# Leafnodes to conncet to
#
#   ngs:
#     url: nats://connect.ngs.global:7422
#     credentialSecret: ngsLeafnode
#
# The secret should have in it a file connection.creds
leafnodes: {}

# Configures provisioning mode by allowing unverified TLS
# connections.  See https://choria.io/blog/post/2021/08/13/secure_and_ha_provisioning/
#
# provisioning:
#   provisionerPassword: s3cret
#   tokenSignerSecret: "provisioner-signer-cert"
provisioning: {}

# Configures the Choria Streaming Server in a seperate pod
# with optional storage mounted from a PVC
streaming:
  # Enables Choria Streaming
  enabled: false
  # The name of the PVC to create
  pvcName: "streaming"
  # If set creates a PVC of this class and storageSize
  storageClassName: ""
  # Size of the created PVC if streamingStorageClassName is set
  storageSize: 10Gi
  # How long to retain lifecycle events, 0 disables
  eventRetention: 24h
  # How long to retain Autonomous Agent events - including Scout events, 0 disables
  stateRetention: 24h
  # Use an init container to set the correct permissions for the mount
  storageInit: false

# Broker specific settings
broker:
  loglevel: info

  # when running behind a load balancer, Service or other kind of proxy
  # the name advertised to Choria nodes should match the public reachable
  # name.  If behind those, please set this to your public DNS name
  publicName: ""

  # Choria Broker will enroll with a Cert Manager Issuer at start for
  # TLS certificates, set this to your issuer.
  certManagerIssuer: "choria-ca"

  # When true a ClusterIP service will be created exposing servicePort
  createService: false

  # The port for the Service to expose when servicePort is true
  servicePort: 4222

  # when servicePort is true also expose the leafnode service
  serviceLeafnodePort: 0

  # The number of pods to create that will form a redundant cluster
  clusterSize: 1

  # AAA Signer Public Certificate, use this to allow TLS-free access to users
  # with valid JWT tokens issued by the aaasvc service.
  #
  # This will use the aaasvc-signer-cert secret to verify clients, the secret
  # should already be there if the aaasvc is deployed in this namespace else
  # follow the instructions in the aaasvc chart to add the aaasvc-signer-cert
  # secret
  allowAAAServiceTokenClients: false

  # Deifne the broker containers resources
  resources: {}
